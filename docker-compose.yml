services:
  # PostgreSQL Database für Keycloak
  postgres-keycloak:
    image: postgres:16
    container_name: family-postgres-keycloak
    hostname: postgres-keycloak
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - family-network

  # PostgreSQL Database für Family Application
  postgres-app:
    image: postgres:16
    container_name: family-postgres-app
    hostname: postgres-app
    environment:
      POSTGRES_DB: family
      POSTGRES_USER: family
      POSTGRES_PASSWORD: family
    volumes:
      - postgres_app_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - family-network

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: family-keycloak
    hostname: keycloak
    environment:
      # Database Configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres-keycloak:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      
      # Admin User
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      
      # Keycloak Configuration for development
      KC_HTTP_ENABLED: "true"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      # Disable hostname validation for development
      KC_HOSTNAME_STRICT: "false"
    ports:
      - "8080:8080"
    depends_on:
      - postgres-keycloak
    command: start-dev --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    networks:
      - family-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/realms/master || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis Cache für L2 Caching
  redis:
    image: redis:7-alpine
    container_name: family-redis
    hostname: redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - family-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Zookeeper für Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: family-zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - family-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: family-kafka
    hostname: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
    ports:
      - "9094:9094"
    networks:
      - family-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Kafka UI für Development
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: family-kafka-ui
    hostname: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: family-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    ports:
      - "8082:8080"
    networks:
      - family-network

  # Kafka Topic Initializer
  kafka-init:
    image: confluentinc/cp-kafka:7.6.0
    container_name: family-kafka-init
    hostname: kafka-init
    depends_on:
      - kafka
    command: |
      bash -c "
      echo 'Waiting for Kafka to be ready...'
      while ! kafka-topics --bootstrap-server kafka:9092 --list 2>/dev/null; do
        sleep 2
      done
      echo 'Creating topic family.events...'
      kafka-topics --create --topic family.events --bootstrap-server kafka:9092 --partitions 3 --replication-factor 1 --if-not-exists
      echo 'Topic creation completed'
      "
    networks:
      - family-network

  # Family API
  family-api:
    build:
      context: .
      dockerfile: src/api/Family.Api/Dockerfile
    container_name: family-api
    hostname: family-api
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://0.0.0.0:8081
      ConnectionStrings__DefaultConnection: "Host=postgres-app;Database=family;Username=family;Password=family"
      ConnectionStrings__Redis: "redis:6379"
      ConnectionStrings__Kafka: "kafka:9092"
      Keycloak__Authority: "http://keycloak:8080/realms/family"
      Keycloak__Audience: "family-api"
      Cache__RedisConnectionString: "redis:6379"
      Kafka__BootstrapServers: "kafka:9092"
    ports:
      - "8081:8081"
    depends_on:
      - postgres-app
      - redis
      - kafka
      - kafka-init
      - keycloak
    networks:
      - family-network

  # Family Web Frontend (Angular)
  family-web:
    build:
      context: ./src/frontend/web
      dockerfile: Dockerfile
    container_name: family-web
    hostname: family-web
    environment:
      - NODE_ENV=production
    ports:
      - "4200:80"
    networks:
      - family-network

volumes:
  postgres_keycloak_data:
  postgres_app_data:
  redis_data:

networks:
  family-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
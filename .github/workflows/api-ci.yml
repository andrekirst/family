name: API CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/api/**'
      - '.github/workflows/api-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/api/**'
      - '.github/workflows/api-ci.yml'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore Family.sln
    
    - name: Build solution
      run: dotnet build Family.sln --no-restore --configuration Release
    
    - name: Run tests with coverage
      run: dotnet test Family.sln --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --settings codecoverage.runsettings --results-directory ./coverage
    
    - name: Install ReportGenerator tool
      run: dotnet tool install -g dotnet-reportgenerator-globaltool
    
    - name: Generate coverage report
      run: reportgenerator -reports:"coverage/**/coverage.cobertura.xml" -targetdir:"coverage/report" -reporttypes:Html_Dark,Badges,MarkdownSummaryGithub,TextSummary -assemblyfilters:"-*.Tests"
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false
    
    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: coverage/report/
        retention-days: 30
    
    - name: Check coverage threshold
      run: |
        COVERAGE=$(grep -oP 'Line coverage: \K[0-9.]+' coverage/report/Summary.txt)
        echo "Current coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE < 40" | bc -l) )); then
          echo "Coverage ${COVERAGE}% is below required threshold of 40%"
          exit 1
        fi
        echo "Coverage threshold met: ${COVERAGE}% >= 40%"
    
    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const summary = fs.readFileSync('coverage/report/MarkdownSummaryGithub.md', 'utf8');
            const textSummary = fs.readFileSync('coverage/report/Summary.txt', 'utf8');
            
            const coverageMatch = textSummary.match(/Line coverage: ([\d.]+)%/);
            const coverage = coverageMatch ? coverageMatch[1] : 'Unknown';
            
            const comment = `## üìä Code Coverage Report
            
            **Coverage: ${coverage}%** ${coverage >= 40 ? '‚úÖ' : '‚ùå'}
            
            ${summary}
            
            üìÅ [View detailed coverage report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ---
            *Coverage threshold: 40% | Generated by Family CI/CD*`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.error('Error posting coverage comment:', error);
          }